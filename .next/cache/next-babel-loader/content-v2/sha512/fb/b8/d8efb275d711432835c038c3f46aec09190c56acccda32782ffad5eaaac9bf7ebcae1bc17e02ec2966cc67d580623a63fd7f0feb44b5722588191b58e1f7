{"ast":null,"code":"import _regeneratorRuntime from \"/media/haddad/6a8a543b-c57b-47b0-a06e-396959f42841/sandra-udemy/next-movie-omdb/node_modules/@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"/media/haddad/6a8a543b-c57b-47b0-a06e-396959f42841/sandra-udemy/next-movie-omdb/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"/media/haddad/6a8a543b-c57b-47b0-a06e-396959f42841/sandra-udemy/next-movie-omdb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/haddad/6a8a543b-c57b-47b0-a06e-396959f42841/sandra-udemy/next-movie-omdb/pages/movie.js\";\nimport fetch from \"node-fetch\";\nimport List from \"../components/List\";\n\nfunction Movie(_ref) {\n  var results = _ref.results;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n}\n\n_c = Movie;\n\nMovie.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var _ctx$query$query, _ctx$query;\n\n    var req, res, match, history, location, ctx, search, response, data, results;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req, res = _ref2.res, match = _ref2.match, history = _ref2.history, location = _ref2.location, ctx = _objectWithoutProperties(_ref2, [\"req\", \"res\", \"match\", \"history\", \"location\"]);\n            search = (_ctx$query$query = ctx === null || ctx === void 0 ? void 0 : (_ctx$query = ctx.query) === null || _ctx$query === void 0 ? void 0 : _ctx$query.query) !== null && _ctx$query$query !== void 0 ? _ctx$query$query : \"\";\n            _context.next = 4;\n            return fetch(\"http://www.omdbapi.com/?apikey=7714b291&=\".concat(search));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return response.json();\n\n          case 7:\n            data = _context.sent;\n            results = data.Search;\n            return _context.abrupt(\"return\", {\n              results: results // will be passed to the page component as props\n\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/media/haddad/6a8a543b-c57b-47b0-a06e-396959f42841/sandra-udemy/next-movie-omdb/pages/movie.js"],"names":["fetch","List","Movie","results","getInitialProps","req","res","match","history","location","ctx","search","query","response","json","data","Search"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,SAASC,KAAT,OAA2B;AAAA,MAAVC,OAAU,QAAVA,OAAU;AAGvB,sBACI;AAAA,2BACD,QAAC,IAAD;AAAM,MAAA,OAAO,EAAEA;AAAf;AAAA;AAAA;AAAA;AAAA;AADC,mBADJ;AAKH;;KARQD,K;;AAUTA,KAAK,CAACE,eAAN;AAAA,uEAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBC,YAAAA,GADoB,SACpBA,GADoB,EAEpBC,GAFoB,SAEpBA,GAFoB,EAGpBC,KAHoB,SAGpBA,KAHoB,EAIpBC,OAJoB,SAIpBA,OAJoB,EAKpBC,QALoB,SAKpBA,QALoB,EAMjBC,GANiB;AAQdC,YAAAA,MARc,uBAQLD,GARK,aAQLA,GARK,qCAQLA,GAAG,CAAEE,KARA,+CAQL,WAAYA,KARP,+DAQgB,EARhB;AAAA;AAAA,mBASGZ,KAAK,oDAA6CW,MAA7C,EATR;;AAAA;AASdE,YAAAA,QATc;AAAA;AAAA,mBAUDA,QAAQ,CAACC,IAAT,EAVC;;AAAA;AAUdC,YAAAA,IAVc;AAWdZ,YAAAA,OAXc,GAWJY,IAAI,CAACC,MAXD;AAAA,6CAab;AACLb,cAAAA,OAAO,EAAPA,OADK,CAEL;;AAFK,aAba;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAoBA,eAAeD,KAAf","sourcesContent":["import fetch from \"node-fetch\";\nimport List from \"../components/List\";\n\nfunction Movie ({results}) {\n \n   \n    return  (\n        <>\n       <List results={results} />\n        </>\n   );\n}\n\nMovie.getInitialProps = async  ({\n    req,\n    res,\n    match,\n    history,\n    location,\n    ...ctx\n}) => {\n    const search = ctx?.query?.query ?? \"\";\n    const response = await fetch(`http://www.omdbapi.com/?apikey=7714b291&=${search}`);\n    const data = await response.json()\n    const results = data.Search;\n  \n    return {\n      results, \n      // will be passed to the page component as props\n    };\n  };\n  \n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}