{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/haddad/6a8a543b-c57b-47b0-a06e-396959f42841/sandra-udemy/next-movie-omdb/pages/movie.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport fetch from \"node-fetch\";\nimport List from \"../components/List\";\n\nconst Movie = ({\n  results,\n  search\n}) => {\n  console.log({\n    search\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n\nMovie.getInitialProps = async (_ref) => {\n  var _ctx$query$query, _ctx$query;\n\n  let {\n    req,\n    res,\n    match,\n    history,\n    location\n  } = _ref,\n      ctx = _objectWithoutProperties(_ref, [\"req\", \"res\", \"match\", \"history\", \"location\"]);\n\n  const search = (_ctx$query$query = ctx === null || ctx === void 0 ? void 0 : (_ctx$query = ctx.query) === null || _ctx$query === void 0 ? void 0 : _ctx$query.query) !== null && _ctx$query$query !== void 0 ? _ctx$query$query : \"\";\n  const response = await fetch(`http://www.omdbapi.com/?s=fast&apikey=7714b291`);\n  const data = await response.json();\n  const results = data.Search;\n  return {\n    props: {\n      results,\n      search\n    } // will be passed to the page component as props\n\n  };\n};\n\nexport default Movie;","map":{"version":3,"sources":["/media/haddad/6a8a543b-c57b-47b0-a06e-396959f42841/sandra-udemy/next-movie-omdb/pages/movie.js"],"names":["fetch","List","Movie","results","search","console","log","getInitialProps","req","res","match","history","location","ctx","query","response","data","json","Search","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,KAAK,GAAK,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAwB;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA;AAAD,GAAZ;AAEE,sBACI;AAAA,2BACD,QAAC,IAAD;AAAM,MAAA,OAAO,EAAED;AAAf;AAAA;AAAA;AAAA;AAAA;AADC,mBADJ;AAKH,CARD;;AAUAD,KAAK,CAACK,eAAN,GAAwB,gBAOlB;AAAA;;AAAA,MAP0B;AAChCC,IAAAA,GADgC;AAEhCC,IAAAA,GAFgC;AAGhCC,IAAAA,KAHgC;AAIhCC,IAAAA,OAJgC;AAKhCC,IAAAA;AALgC,GAO1B;AAAA,MADHC,GACG;;AACF,QAAMT,MAAM,uBAAGS,GAAH,aAAGA,GAAH,qCAAGA,GAAG,CAAEC,KAAR,+CAAG,WAAYA,KAAf,+DAAwB,EAApC;AACA,QAAMC,QAAQ,GAAG,MAAMf,KAAK,CAAE,gDAAF,CAA5B;AACA,QAAMgB,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AACA,QAAMd,OAAO,GAAGa,IAAI,CAACE,MAArB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AAAChB,MAAAA,OAAD;AAAUC,MAAAA;AAAV,KADF,CACqB;;AADrB,GAAP;AAGD,CAhBH;;AAmBA,eAAeF,KAAf","sourcesContent":["import fetch from \"node-fetch\";\nimport List from \"../components/List\";\n\nconst Movie  =  ({results, search})  => {\n  console.log({search});\n   \n    return  (\n        <>\n       <List results={results} />\n        </>\n   );\n}\n\nMovie.getInitialProps = async  ({\nreq,\nres,\nmatch,\nhistory,\nlocation,\n...ctx\n}) => {\n    const search = ctx?.query?.query ?? \"\"\n    const response = await fetch(`http://www.omdbapi.com/?s=fast&apikey=7714b291`);\n    const data = await response.json()\n    const results = data.Search;\n  \n    return {\n      props: {results, search}, // will be passed to the page component as props\n    }\n  }\n  \n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}